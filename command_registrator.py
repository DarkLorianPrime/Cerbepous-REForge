"""
Darklorian
@animanshnik (tg)
"""

import json
import random

from projects.MediaSoft.diplom_tg import request_updater, safe_random_citates, logger, textovic

tg = request_updater.tg()
st = {'text': 'q', 'callback_data': 'q'}

dicts = {'inline_keyboard': []}


# –ï—Å–ª–∏ –≤–∏–¥–∏—à—å —ç—Ç–æ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π - –ø—Ä–æ—Å–∫—Ä–æ–ª–ª—å –∫–æ–ª–µ—Å–∏–∫–æ–º —Ä–∞–∑ 10, –Ω–µ —Å–º–æ—Ç—Ä–∏ —Å—é–¥–∞. –í—Ç–æ—Ä–∞—è –ø–æ –∫–æ—Å—Ç—ã–ª—å–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ—Å–ª–µ updater'–∞
def add_button(*args):
    k_e = len(args) // 2
    if k_e == 4:
        d = dicts['inline_keyboard'] + [
            [{'text': args[0], 'callback_data': args[1]}, {'text': args[2], 'callback_data': args[3]},
             {'text': args[4], 'callback_data': args[5]}, {'text': args[6], 'callback_data': args[7]}]]
    elif k_e == 3:
        d = dicts['inline_keyboard'] + [
            [{'text': args[0], 'callback_data': args[1]}, {'text': args[2], 'callback_data': args[3]},
             {'text': args[4], 'callback_data': args[5]}]]
    elif k_e == 2:
        d = dicts['inline_keyboard'] + [
            [{'text': args[0], 'callback_data': args[1]}, {'text': args[2], 'callback_data': args[3]}]]
    elif k_e == 1:
        d = dicts['inline_keyboard'] + [[{'text': args[0], 'callback_data': args[1]}]]
    else:
        return 'MAX 8 ARGS: "text", "callback_data" * 4'
    dicts['inline_keyboard'] = d


# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —ç—Ç–æ–π –∫–∞—à–∏ –∑–∞–ø—Ä–æ—Å–æ–≤. –•–æ—Ç–∏—Ç–µ —ç—Ç–æ —É–≤–∏–¥–µ—Ç—å?
# {'ok': True, 'result': {'message_id': 375, 'from': {'id': 1800683859, 'is_bot': True, 'first_name': '–¶–µ—Ä–±–µ—Ä', 'username': 'cerbepous_bot'}, 'chat': {'id': 1353242961, 'first_name': '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä', 'last_name': '–ö–∞—Å–∏–º–æ–≤', 'username': 'animanshnik', 'type': 'private'}, 'date': 1622300209, 'photo': [{'file_id': 'AgACAgQAAxkDAAIBd2CyVjF19TD8nqs_mHTskso0K8P4AAI7rDEbbyeNUUKugzvXbSa0sQHNMF0AAwEAAwIAA3MAAwFQAAIfBA', 'file_unique_id': 'AQADsQHNMF0AAwFQAAI', 'file_size': 1907, 'width': 82, 'height': 90}, {'file_id': 'AgACAgQAAxkDAAIBd2CyVjF19TD8nqs_mHTskso0K8P4AAI7rDEbbyeNUUKugzvXbSa0sQHNMF0AAwEAAwIAA20ABFAAAh8E', 'file_unique_id': 'AQADsQHNMF0ABFAAAg', 'file_size': 29923, 'width': 293, 'height': 320}, {'file_id': 'AgACAgQAAxkDAAIBd2CyVjF19TD8nqs_mHTskso0K8P4AAI7rDEbbyeNUUKugzvXbSa0sQHNMF0AAwEAAwIAA3gAAwNQAAIfBA', 'file_unique_id': 'AQADsQHNMF0AAwNQAAI', 'file_size': 119416, 'width': 733, 'height': 800}, {'file_id': 'AgACAgQAAxkDAAIBd2CyVjF19TD8nqs_mHTskso0K8P4AAI7rDEbbyeNUUKugzvXbSa0sQHNMF0AAwEAAwIAA3kAAwJQAAIfBA', 'file_unique_id': 'AQADsQHNMF0AAwJQAAI', 'file_size': 136273, 'width': 811, 'height': 885}]}}
def re_func(args):
    if dict(args[0]).get('callback_query'):
        chat_id = args[0]['callback_query']['message']['chat']['id']
        text = args[0]['callback_query']['message']['text']
        message_id = args[0]['callback_query']['message']['message_id']
        data = args[0]['callback_query']['data']
        return chat_id, text, message_id, data
    else:
        chat_id = args[0]['message']['chat']['id']
        text = args[0]['message']['text']
        message_id = args[0]['message']['message_id']
        return chat_id, text, message_id


# –§—É–Ω–∫—Ü–∏—è, –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Ñ—É–Ω–∫—Ü–∏—è –∫—Å—Ç–∞—Ç–∏.
def reg():
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    @logger.logger('Function Who')
    @request_updater.handler('/—Ç–∞–∑–∞—à–æ', '/–∫—Ç–æ')
    def send_name(*args):
        chat_id, text, message = re_func(args)
        tg.sendMessage(chat_id=chat_id,
                       text=f"–Ø –¥—É–º–∞—é, —Ç—ã - {args[0]['message']['from']['first_name']} {args[0]['message']['from']['last_name']}, –±—è–∫–∞!")
        tg.sendPhoto(chat_id=chat_id, photo='https://i.redd.it/nmib9xeajsb61.jpg')

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞—Ö–æ–¥–µ
    @logger.logger('Function Start')
    @request_updater.handler('/start')
    def hello(*args):
        chat_id, text, message = re_func(args)
        tg.sendMessage(chat_id=chat_id,
                       text=f'–ü—Ä–∏–≤–µ–µ–µ—Ç–∏–∫! –ú–µ–Ω—è –∑–æ–≤—É—Ç —Ü–µ—Ä–±–µ—Ä, –Ω–æ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–∑—ã–≤–∞—Ç—å –º–µ–Ω—è —Ü–µ—Ä–±–µ—Ä—É—à–µ–π :–ó\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—â–∞–π—Å—è –≤–µ–∂–ª–∏–≤–æ. –Ø –Ω–µ —Å–º–æ–≥—É —Ç–µ–±–µ –Ω–∏—á–µ–≥–æ —Å–¥–µ–ª–∞—Ç—å, –Ω–æ –Ω–µ–ø—Ä–∏–ª–∏—á–Ω–æ –∂–µ?')
        tg.sendAnimation(chat_id=chat_id,
                         animation='http://img0.joyreactor.cc/pics/post/–ò–≥—Ä—ã-Cerberus-%28Helltaker%29-Helltaker-Helltaker-gif-5958898.gif')
        tg.sendMessage(chat_id=chat_id,
                       text='–£ –º–µ–Ω—è –∫—Å—Ç–∞—Ç–∏ –ø–æ—è–≤–∏–ª–∞—Å—å –æ—Ñ–∏–≥–µ–Ω–Ω–∞—è Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞\n***–ï—Å–ª–∏ —ç—Ç–æ—Ç –õ–æ—Ä –∫–æ–Ω–µ—á–Ω–æ —É—Å–ø–µ–ª –µ–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å***\n–ù–∞–ø–∏—à–∏ /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ –µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è!')

    # /help. –ö–Ω–æ–æ–æ–æ–æ–æ–æ–æ–ø–∞—á–∫–∏))
    @logger.logger('Function Help')
    @request_updater.handler('/help')
    def Help(*args):
        r = json.dumps({'inline_keyboard': [[{"text": 'Open menu', 'callback_data': '/hlp1'}]]})
        tg.sendMessage(chat_id=args[0]['message']['chat']['id'], reply_markup=r, text='Help menu:')

    # –°–º–æ—Ç—Ä—é –Ω–∞ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é, –∏ –∫–∞–∫–∞—è-—Ç–æ –æ–≥—Ä–µ—Å—Å–∏—è, –∏ –∑—É–±—ã —Å–∫—Ä–∏–ø—è—Ç. –ù–µ–Ω–∞–≤–∏–∂—É –∫–Ω–æ–ø–∫–∏ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞(
    @logger.logger('Function HelpMenu')
    @request_updater.handler_cb('/hlp1', 'cb_start', '/history', 'exit', 'cb_who', 'cb_about', 'cb_about_bot',
                                'cb_hist', 'cb_mediasoft', 'pass')
    def help_pages(*args):
        chat_id, text, message_id, data = re_func(args)
        dicts['inline_keyboard'] = []
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ—á–µ–∫. –ü–æ—Å–º–æ—Ç—Ä–µ–ª –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π json, –≤–æ–ª–æ—Å—ã –¥—ã–±–æ–º –≤—Å—Ç–∞–ª–∏. –ê —Ç–∞–∫ - –≤—Å–µ —É–¥–æ–±–Ω–µ–Ω—å–∫–æ. 'text', 'callback_data'
        add_button('üî•–∫—Ç–æ', 'cb_who', 'üî•start', 'cb_start', 'üî•about', 'cb_about', 'üî•about_bot', 'cb_about_bot')
        add_button('üî•history', 'cb_hist', 'üî•Mediasoft', 'cb_mediasoft')
        add_button('exit', 'exit')
        add_button('–≠—Ç–∏', 'pass', '–î–≤–µ', 'pass', '–°—Ç—Ä–æ–∫–∏', 'pass', '–ü–æ–∫–∞–∑—ã–≤–∞—é—Ç', 'pass')
        add_button('–∫–∞–∫', 'pass', '—Ä–∞–±–æ—Ç–∞—é—Ç', 'pass', '–∫–Ω–æ–ø–∫–∏', 'pass')
        r = json.dumps(dicts)
        # –î–∞–ª—å—à–µ —Ç–æ–∂–µ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –Ω–µ —á–∏—Ç–∞—Ç—å
        if data == '/hlp1':
            tg.editMessageText(chat_id=chat_id, message_id=message_id, reply_markup=r, text='Help menu:')
        if data == 'cb_who':
            tg.editMessageText(chat_id=chat_id, reply_markup=r, message_id=message_id,
                               text='–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–∑–Ω–∞—Ç—å –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –∞–∫–∫–∞—É–Ω—Ç–∞')
        if data == 'cb_start':
            tg.editMessageText(chat_id=chat_id, message_id=message_id, text='–ü—Ä–æ—á–∏—Ç–∞—Ç—å –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –µ—â–µ —Ä–∞–∑',
                               reply_markup=r, )
        if data == 'exit':
            tg.editMessageText(chat_id=chat_id, message_id=message_id, text='–•–æ–ø–∞, –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Ö–ª–æ–ø–Ω—É–ª–∞—Å—å.')
        if data == 'cb_about':
            tg.editMessageText(chat_id=chat_id, message_id=message_id, text='–ù–∞—à —Å–æ–∑–¥–∞—Ç–µ–ª—å: \nvk: vk.com/animanshnik '
                                                                            '\ntg: @animanshnik'
                                                                            '\ngithub: https://github.com/DarkLorianPrime',
                               reply_markup=r, )
        if data == 'cb_mediasoft':
            tg.sendMessage(chat_id=chat_id, text=textovic.mediasoft)
        if data == 'cb_hist':
            tg.editMessageText(chat_id=chat_id, message_id=message_id, text='–ü–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞–ø–∏—à–∏ —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é!\n'
                                                                            '–ú—ã —Ç–µ–±—è –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –≤—ã—Å–ª—É—à–∞–µ–º :–ó',
                               reply_markup=r)
        if data == 'cb_about_bot':
            tg.editMessageText(chat_id=chat_id, message_id=message_id,
                               text='–ú—ã - –±–æ—Ç –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ –º–æ–¥–µ–ª–∏ cerber-1.\n–ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –Ω–∞—à–∏—Ö –∫–æ–º–∞–Ω–¥ –≤—ã —Ä–∏—Å–∫—É–µ—Ç–µ:'
                                    '\nüòà1. –ü–æ—Ç–µ—Ä—è—Ç—å –ø–∞–ª—å—Ü—ã\nüòà2. –ü–æ—Ç–µ—Ä—è—Ç—å –¥—É—à—É'
                                    '\nüôãüèª‚Äç‚ôÄÔ∏è3. –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏—é –∏ –∑–∞–º–∫–Ω—É—Ç—Å—è –≤ —Å–µ–±–µ. –°—Ç–∞—Ç—å —Ç–∏—Ö–∏–º, –∑–∞–º–∫–Ω—É—Ç—ã–º, –Ω–µ–æ–±—â–∏—Ç–µ–ª—å–Ω—ã–º. '
                                    '\n4. –ü–æ–ª—É—á–∏—Ç—å üêïüêïüêï —Ö–æ—Ä–æ—à–∏—Ö –¥—Ä—É–∑–µ–π, –Ω–æ —ç—Ç–æ –µ—Å–ª–∏ –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ –ø–æ–≤–µ–∑–µ—Ç.'
                                    '\nüî•–í –æ—Å–Ω–æ–≤–Ω–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç 1, –Ω–æ –∏–Ω–æ–≥–¥–∞, —Å –Ω–∞—à–∏–º —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏ 3.üî•'
                                    '\n–£–¥–∞—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)üñ§', reply_markup=r, )
        if data == 'pass':
            tg.sendMessage(chat_id=chat_id, text='Nothing find! He-he. Don`t touch this button! Please. Really, dont`t')

    # –†–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—à—å —Ä–∞–Ω–¥–æ–º–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é - –ø–æ–ª—É—á–∞–µ—à—å —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ –Ω–µ–µ.
    @request_updater.handler('/–∏—Å—Ç–æ—Ä–∏—è', '/history')
    @logger.logger('Function history')
    def history(*args):
        chat_id, text, message_id = re_func(args)
        text = args[0]['message']['text'][8:]
        if text != '':
            tg.sendMessage(chat_id=chat_id,
                           text=f'{text}\n\n{safe_random_citates.citates[random.randint(0, len(safe_random_citates.citates)) - 1]}')
            tg.sendPhoto(chat_id=chat_id,
                         photo=safe_random_citates.citates_photo[
                             random.randint(0, len(safe_random_citates.citates_photo)) - 1])
        else:
            tg.sendMessage(chat_id=chat_id,
                           text='–ú—ã –≤–æ–æ–±—â–µ —Ç–æ –∏—Å—Ç–æ—Ä–∏—é –∂–¥–∞–ª–∏! –ë—è–∫–∞ >_<\n–í—Å—Ç–∞–ª –∏ –º–æ–ª—á–∏—Ç —Ç—É—Ç. –ü–µ—Ä–µ–≤–µ–ª–∏—Å—å —Ä–∞—Å—Å–∫–∞–∑—á–∏–∫–∏ –Ω–∞ –∑–µ–º–ª–µ R—É—Å—Å–∫–æ–π!')

    @request_updater.handler('/mediasoft', '/–º–µ–¥–∏–∞—Å–æ—Ñ—Ç', '/mediasoftinfo', '/andreyprivet')
    @logger.logger('Function info about mediasoft')
    def mediasoft_info(*args):
        chat_id, text, message_id = re_func(args)
        tg.sendMessage(chat_id=chat_id,
                       text=textovic.mediasoft)
